CREATE DEFINER=`root`@`localhost` PROCEDURE `ReportData`()
BEGIN

    SELECT 
        md.serialNumber AS moduleserialNumber,
        md.name AS modulename,
        app.serialNumber AS appserialNumber,
        app.name AS appname,
        menu.serialNumber AS menuserialNumber,
        menu.title,

        item.serialNumber AS itemserialNumber,
        item.name AS itemName,
        item.itemType AS itemType,
        item.buttonType AS regName,
        item.buttonLabel AS itemViewEntry,
        item.description AS itemdescription,

        -- Show subitem info only if dpgroupmap exists; else NULL
        CASE WHEN dpgm.id IS NOT NULL THEN si.serialNumber ELSE NULL END AS siserialNumber,
        CASE WHEN dpgm.id IS NOT NULL THEN si.name ELSE NULL END AS siitem,
        CASE WHEN dpgm.id IS NOT NULL THEN si.layout ELSE NULL END AS silayout,
        CASE WHEN dpgm.id IS NOT NULL THEN si.description ELSE NULL END AS sidescription,
        CASE WHEN dpgm.id IS NOT NULL THEN si.buttonLabel ELSE NULL END AS sibuttonLabel,
        CASE WHEN dpgm.id IS NOT NULL THEN si.navigationTo ELSE NULL END AS sisinavigationTo,

        CASE WHEN dpgm.id IS NOT NULL THEN ssi.serialNumber ELSE NULL END AS ssiserialNumber,
        CASE WHEN dpgm.id IS NOT NULL THEN ssi.name ELSE NULL END AS ssiname,
        CASE WHEN dpgm.id IS NOT NULL THEN ssi.layout ELSE NULL END AS ssilayout,
        CASE WHEN dpgm.id IS NOT NULL THEN ssi.buttonLabel ELSE NULL END AS ssibuttonLabel,
        CASE WHEN dpgm.id IS NOT NULL THEN ssi.navigationTo ELSE NULL END AS ssinavigationTo,

        CASE WHEN dpgm.id IS NOT NULL THEN sssi.serialNumber ELSE NULL END AS sssiserialNumber,
        CASE WHEN dpgm.id IS NOT NULL THEN sssi.name ELSE NULL END AS sssiname,
        CASE WHEN dpgm.id IS NOT NULL THEN sssi.layout ELSE NULL END AS sssilayout,

        fi.serialNumber AS groupserialNumber,
        fi.fieldGroupCode,
        fi.id AS dpgroupid,
        fi.tier AS dpgrouptier,
        fi.displayType AS dpgroupdisplay,
        fi.description AS dpgroupremarks,

        dp.id AS datapointId,
        dp.serialNumber AS datapointSerialNumber,
        dp.dataPoint,
        dp.dpGroupCode,
        dp.dataType,
        dp.isHide,
        dp.isRequired,
        dp.regional,

        -- Mapping status flags with human readable labels
        CASE WHEN fi.id IS NOT NULL THEN '1' ELSE '0' END AS fieldMappingStatus,
        CASE WHEN dpm.dataPointId IS NOT NULL THEN '1' ELSE '0' END AS datapointMappingStatus,
        CASE WHEN dpgm.id IS NOT NULL THEN '1' ELSE '0' END AS dpGroupMapStatus

    FROM modules md
    INNER JOIN app       ON md.id = app.moduleId
    INNER JOIN menu      ON app.id = menu.appId
    INNER JOIN item      ON menu.id = item.menuId

    -- Subitems left join (we conditionally show later)
    LEFT JOIN sub_item           si  ON item.id = si.itemId
    LEFT JOIN sub_sub_item       ssi ON si.id = ssi.subItemId
    LEFT JOIN sub_sub_sub_item   sssi ON ssi.id = sssi.subSubItemId

    -- Fields may have subitem/subsubitem/subsubsubitem or nulls (item-level field)
    LEFT JOIN field fi
      ON fi.itemId = item.id
     AND (fi.subItemId IS NULL OR fi.subItemId = si.id)
     AND (fi.subSubItemId IS NULL OR fi.subSubItemId = ssi.id)
     AND (fi.subSubSubItemId IS NULL OR fi.subSubSubItemId = sssi.id)

    -- Datapoints linked to item
    LEFT JOIN datapoint dp
      ON dp.itemId = item.id

    -- Datapoint to Field mapping (must exist to be "mapped")
    LEFT JOIN datapointmap dpm
      ON dpm.itemId = item.id
     AND dpm.dataPointId = dp.id
     AND dpm.dpGroupId   = fi.id

    -- dpGroupMap links dpGroup to subitems, optional subitem IDs can be NULL
    LEFT JOIN dpgroupmap dpgm
      ON dpgm.itemId   = item.id
     AND dpgm.dpGroupId = fi.id
     AND (dpgm.subItemId       IS NULL OR dpgm.subItemId       = si.id)
     AND (dpgm.subSubItemId    IS NULL OR dpgm.subSubItemId    = ssi.id)
     AND (dpgm.subSubSubItemId IS NULL OR dpgm.subSubSubItemId = sssi.id)

    -- No filter here to keep all records, mapped or not

    ORDER BY 
        CAST(md.serialNumber AS UNSIGNED),
        CAST(app.serialNumber AS UNSIGNED),
        CAST(menu.serialNumber AS UNSIGNED),
        CAST(item.serialNumber AS UNSIGNED),
        CAST(si.serialNumber AS UNSIGNED),
        CAST(ssi.serialNumber AS UNSIGNED),
        CAST(sssi.serialNumber AS UNSIGNED),
        CAST(fi.serialNumber AS UNSIGNED),
        CAST(dp.serialNumber AS UNSIGNED);
END