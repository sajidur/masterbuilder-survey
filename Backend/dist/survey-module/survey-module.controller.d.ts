import { SurveyModuleService } from './survey-module.service';
import { Modules } from './survey-module.entity/modules.entity';
import { App } from './survey-module.entity/app.entity';
import { Menu } from './survey-module.entity/menu.entity';
import { Item } from './survey-module.entity/item.entity';
import { SubItem } from './survey-module.entity/subitem.entity';
import { Field } from './survey-module.entity/field.entity';
export declare class SurveyModuleController {
    private readonly moduleService;
    constructor(moduleService: SurveyModuleService);
    findAllSubItems(): Promise<SubItem[]>;
    findOneSubItem(id: number): Promise<SubItem>;
    createSubItem(subItem: SubItem): Promise<SubItem>;
    updateSubItem(id: number, subItem: SubItem): Promise<SubItem>;
    deleteSubItem(id: number): Promise<void>;
    findAll(): Promise<Modules[]>;
    findOne(id: string): Promise<Modules>;
    create(module: Modules): Promise<Modules>;
    update(id: number, module: Modules): Promise<Modules>;
    remove(id: string): Promise<void>;
    findAllApps(): Promise<App[]>;
    findOneApp(id: number): Promise<App>;
    createApp(app: App): Promise<App>;
    updateApp(id: number, app: App): Promise<App>;
    deleteApp(id: number): Promise<void>;
    findAllMenus(): Promise<Menu[]>;
    findOneMenu(id: number): Promise<Menu>;
    createMenu(menu: Menu): Promise<Menu>;
    updateMenu(id: number, menu: Menu): Promise<Menu>;
    deleteMenu(id: number): Promise<void>;
    findAllItems(): Promise<Item[]>;
    findOneItem(id: number): Promise<Item>;
    createItem(item: Item): Promise<Item>;
    updateItem(id: number, item: Item): Promise<Item>;
    deleteItem(id: number): Promise<void>;
    findAllFields(): Promise<Field[]>;
    findOneField(id: number): Promise<Field>;
    createField(field: Field): Promise<Field>;
    updateField(id: number, field: Field): Promise<Field>;
    deleteField(id: number): Promise<void>;
}
