import { SurveyModuleService } from './survey-module.service';
import { Modules } from './survey-module.entity/modules.entity';
import { SubSubItem } from './survey-module.entity/subsubitem.entity';
import { AppDto, CreateAppDto, UpdateAppDto } from './survey-module.dto/App.dto';
import { CreateMenuDto, MenuDto } from './survey-module.dto/menu.dto';
import { CreateItemDto, ItemDto } from './survey-module.dto/item.dto';
import { CreateSubItemDto, SubItemDto } from './survey-module.dto/subiItem.dto';
import { CreateSubSubItemDto, SubSubItemDto } from './survey-module.dto/subSubItem.dto';
import { CreateFieldDto, FieldDto } from './survey-module.dto/field.dto';
import { CreateModuleDto, UpdateModuleDto } from './survey-module.dto/create-module.dto';
export declare class SurveyModuleController {
    private readonly moduleService;
    constructor(moduleService: SurveyModuleService);
    findAllSubItems(): Promise<SubItemDto[]>;
    findOneSubItem(id: number): Promise<SubItemDto>;
    createSubItem(subItem: CreateSubItemDto): Promise<SubItemDto>;
    updateSubItem(id: number, subItem: CreateSubItemDto): Promise<SubItemDto>;
    deleteSubItem(id: number): Promise<void>;
    findAll(): Promise<Modules[]>;
    findOne(id: string): Promise<Modules>;
    create(moduleDto: CreateModuleDto): Promise<Modules>;
    update(id: number, moduleDto: UpdateModuleDto): Promise<Modules>;
    remove(id: string): Promise<void>;
    findAllApps(): Promise<AppDto[]>;
    findOneApp(id: number): Promise<AppDto>;
    createApp(app: CreateAppDto): Promise<AppDto>;
    updateApp(id: number, app: UpdateAppDto): Promise<AppDto>;
    deleteApp(id: number): Promise<void>;
    findAllMenus(): Promise<MenuDto[]>;
    findOneMenu(id: number): Promise<MenuDto>;
    createMenu(menuDto: CreateMenuDto): Promise<MenuDto>;
    updateMenu(id: number, menuDto: CreateMenuDto): Promise<MenuDto>;
    deleteMenu(id: number): Promise<void>;
    findAllItems(): Promise<ItemDto[]>;
    findOneItem(id: number): Promise<ItemDto>;
    createItem(item: CreateItemDto): Promise<ItemDto>;
    updateItem(id: number, item: CreateItemDto): Promise<ItemDto>;
    deleteItem(id: number): Promise<void>;
    findAllFields(): Promise<FieldDto[]>;
    findOneField(id: number): Promise<FieldDto>;
    createField(field: CreateFieldDto): Promise<FieldDto>;
    updateField(id: number, field: CreateFieldDto): Promise<FieldDto>;
    deleteField(id: number): Promise<void>;
    findAllSubSubItems(): Promise<SubSubItemDto[]>;
    findOneSubSubItem(id: number): Promise<SubSubItemDto>;
    createSubSubItem(data: CreateSubSubItemDto): Promise<SubSubItemDto>;
    updateSubSubItem(id: number, data: SubSubItem): Promise<SubSubItemDto>;
    deleteSubSubItem(id: number): Promise<void>;
}
